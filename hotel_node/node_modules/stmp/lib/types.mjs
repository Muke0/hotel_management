/*!
 * Copyright 2019 acrazing <joking.young@gmail.com>. All rights reserved.
 * @since 2019-11-20 15:35:44
 *
 * shared types for client & server
 * TODO
 */
import { isObject } from 'monofile-utilities/lib/is';
export var STMPSource;
(function (STMPSource) {
    STMPSource["HANDLE_REQUEST"] = "HANDLE_REQUEST";
    STMPSource["STATUS_NOT_OK"] = "STATUS_NOT_OK";
    STMPSource["REQUEST_TIMEOUT"] = "REQUEST_TIMEOUT";
    STMPSource["TRANSPORT_ERROR"] = "TRANSPORT_ERROR";
    STMPSource["CONNECTION_CLOSED"] = "CONNECTION_CLOSED";
    STMPSource["PARSE_RESPONSE_ERROR"] = "PARSE_RESPONSE_ERROR";
})(STMPSource || (STMPSource = {}));
export function newError(source, options) {
    if (options === void 0) { options = {}; }
    options.source = source;
    if (options.error instanceof Error) {
        Object.setPrototypeOf(options, options.error);
        options.name = options.error.name + "(" + source + ")";
    }
    else {
        Object.setPrototypeOf(options, new Error(''));
        options.name = source;
    }
    return options;
}
export function isSTMPError(error) {
    return isObject(error) && typeof error.source === 'string';
}
//# sourceMappingURL=types.js.map