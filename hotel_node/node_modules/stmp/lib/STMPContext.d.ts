/*!
 * Copyright 2019 acrazing <joking.young@gmail.com>. All rights reserved.
 * @since 2019-11-29 16:49:10
 *
 * TODO
 */
import { IncomeMessage, Payload, ResponseMessage } from './messages';
import { STMPAction, STMPInstance } from './types';
export interface STMPContext<Q = any, S = any, I extends STMPInstance = STMPInstance> extends stmp.Context<Q, S> {
}
export declare class STMPContext<Q = any, S = any, I extends STMPInstance = STMPInstance> {
    readonly instance: I;
    readonly incoming: IncomeMessage;
    readonly outgoing: ResponseMessage;
    input: Readonly<Q>;
    action: STMPAction<Q, S>;
    constructor(message: IncomeMessage, instance: I);
    isFinished(): boolean;
    get(key: string): string | undefined;
    sget(key: string): string | undefined;
    set(key: string, value: string): this;
    send(): void;
    json(data: S, status?: number): void;
    text(text: string, status?: number): void;
    raw(text: Uint8Array, status?: number): void;
    output(payload: S | Payload, status?: number, contentType?: string): void;
}
