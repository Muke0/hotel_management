/*!
 * Copyright 2019 acrazing <joking.young@gmail.com>. All rights reserved.
 * @since 2019-11-29 17:51:35
 */
/// <reference types="node" />
import net from 'net';
import { STMPMessage } from './messages';
import { STMPConnection } from './STMPConnection';
import { STMPServer } from './STMPServer';
import { StreamConsumer } from './StreamConsumer';
import { STMPInstance } from './types';
export declare class TCPConnection extends STMPConnection implements STMPInstance {
    private handshakeTimer;
    readonly consumer: StreamConsumer;
    constructor(server: STMPServer, socket: net.Socket);
    prepare(handshakeTimeout: number): void;
    private handleHandshakeData;
    private handleMessageData;
    private handleHandshakeTimeout;
    send(message: STMPMessage): void;
    protected sendHandshake(status: number, message: string): void;
    protected terminate(): void;
}
