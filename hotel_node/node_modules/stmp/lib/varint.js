"use strict";
/*!
 * Copyright 2019 acrazing <joking.young@gmail.com>. All rights reserved.
 * @since 2019-11-26 13:59:34
 */
Object.defineProperty(exports, "__esModule", { value: true });
function readVarint(buf) {
    let value;
    let negative;
    if (buf.length < 1) {
        return null;
    }
    let chunk = buf.readUInt8(0);
    negative = chunk > 0x7f;
    chunk = chunk & 0x7f;
    if (chunk < 0x40) {
        return negative ? -chunk : chunk;
    }
    if (buf.length < 2) {
        return null;
    }
    value = chunk & 0x3f;
    chunk = buf.readUInt8(1);
    if (chunk < 0x80) {
        value = (value << 7) + chunk;
        return negative ? -value : value;
    }
    if (buf.length < 3) {
        return null;
    }
    value = (value << 7) + (chunk & 0x7f);
    chunk = buf.readUInt8(2);
    if (chunk < 0x80) {
        value = (value << 7) + chunk;
        return negative ? -value : value;
    }
    if (buf.length < 4) {
        return null;
    }
    value = (value << 7) + (chunk & 0x7f);
    chunk = buf.readUInt8(3);
    value = (value << 8) + chunk;
    return negative ? -value : value;
}
exports.readVarint = readVarint;
function varintLength(value) {
    value = Math.abs(value);
    if (value < 0x40) {
        return 1;
    }
    if (value < 0x2000) {
        return 2;
    }
    if (value < 0x100000) {
        return 3;
    }
    if (value < 0x10000000) {
        return 4;
    }
    return null;
}
exports.varintLength = varintLength;
exports.MAX_VARINT_VALUE = +0xfffffff;
exports.MIN_VARINT_VALUE = -0xfffffff;
function writeVarint(value, buf) {
    const negative = value < 0;
    value = Math.abs(value);
    if (value > exports.MAX_VARINT_VALUE) {
        throw new RangeError(`out of varint range, from -${exports.MAX_VARINT_VALUE} to ${exports.MAX_VARINT_VALUE}`);
    }
    if ((value | 0) !== value) {
        throw new TypeError(`value should be an integer`);
    }
    const length = varintLength(value);
    if (!buf) {
        buf = Buffer.allocUnsafe(length);
    }
    for (let i = length - 1; i > -1; i--) {
        if (i === 3) {
            buf.writeUInt8(value & 0xff, i);
            value >>>= 8;
        }
        else if (i === 0) {
            buf.writeUInt8(value |
                (negative ? (length > 1 ? 0b11000000 : 0x80) : length > 1 ? 0x40 : 0), i);
        }
        else {
            buf.writeUInt8((value & 0x7f) | (length > i + 1 ? 0x80 : 0), i);
            value >>>= 7;
        }
    }
    return buf;
}
exports.writeVarint = writeVarint;
//# sourceMappingURL=varint.js.map